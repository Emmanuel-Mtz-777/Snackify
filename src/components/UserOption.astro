---

import type { User } from '../utils/userData';

interface Props {
  user: User;
  title: string;
}

const { title, user } = Astro.props;

---

<div class="w-[90%] text-white rounded-2xl p-2 flex flex-col gap-4" data-accordion>

  <!-- Dirección de envío -->
  <details class="w-full group bg-[#1e1e1e] transition-all duration-500 ease-in-out rounded-xl p-4">
    <summary class="flex justify-between items-center cursor-pointer list-none text-xl">
      <h3 class="font-semibold text-2xl flex items-center gap-2">
        <ion-icon name="location-outline"></ion-icon> Dirección de envío
      </h3>
      <ion-icon name="caret-forward-outline" class="transition-transform duration-300 group-open:rotate-90 text-3xl" />
    </summary>
    <div class="pl-4 pt-2">
      <p class="mb-4">{user.direccion}</p>
      <div class="w-full flex flex-col sm:flex-row justify-between gap-2">
        <a href="#" class="border p-2 w-full sm:w-[200px] rounded-2xl text-center hover:bg-black hover:font-semibold">Cambiar dirección</a>
        <a href="#" class="border p-2 w-full sm:w-[200px] rounded-2xl text-center text-red-500 bg-[#0c0a0a] hover:bg-white hover:text-black hover:font-semibold">Eliminar dirección</a>
      </div>
    </div>
  </details>

  <!-- Métodos de pago -->
  <details class="w-full group bg-[#1e1e1e] transition-all duration-500 ease-in-out rounded-xl p-4">
    <summary class="flex justify-between items-center cursor-pointer list-none text-xl">
      <h3 class="font-semibold text-2xl flex items-center gap-2">
        <ion-icon name="cash-outline"></ion-icon> Métodos de pago
      </h3>
      <ion-icon name="caret-forward-outline" class="transition-transform duration-300 group-open:rotate-90 text-3xl" />
    </summary>
    <div class="pl-4 pt-2 overflow-hidden transition-all duration-500 ease-in-out">
      <div class="w-full flex flex-col sm:flex-row gap-4 my-2">
        <div class="sm:w-1/2 w-[90%] flex flex-col h-[100px] sm:h-[150px] border p-3 rounded-2xl bg-gray-200 relative text-black">
          <div class="flex justify-between items-start">
            <h3 class="text-md sm:text-xl">{user.tarjeta.numero}</h3>
            <img src={user.tarjeta.logo} alt={`Logo de ${user.tarjeta.tipo}`} class="w-[40px] sm:w-[60px]" />
          </div>
          <div class="absolute bottom-[35px] left-[10px] text-sm font-semibold">
            <span>{`CVV: ${user.tarjeta.cvv}`}</span>
          </div>
          <div class="absolute bottom-[10px] right-[10px] text-sm font-semibold">
            <span>{`Exp: ${user.tarjeta.expiration}`}</span>
          </div>
        </div>

        <!-- Añadir tarjeta -->
        <div class="w-[90%] sm:w-1/2 flex justify-center items-center h-[100px] sm:h-[150px] border p-2 rounded-2xl bg-gray-600/30 border-gray-500 text-center">
          <h3 class="text-lg sm:text-xl flex items-center gap-2"><ion-icon name="add-circle-outline"></ion-icon> Añadir tarjeta</h3>
        </div>
      </div>
    </div>
  </details>

  <!-- Opciones de cuenta -->
  <details class="w-full group bg-[#1e1e1e] transition-all duration-500 ease-in-out rounded-xl p-4">
    <summary class="flex justify-between items-center cursor-pointer list-none text-xl">
      <h3 class="font-semibold text-2xl flex items-center gap-2">
        <ion-icon name="person-outline"></ion-icon> Opciones de cuenta
      </h3>
      <ion-icon name="caret-forward-outline" class="transition-transform duration-300 group-open:rotate-90 text-3xl" />
    </summary>
    <div class="pl-4 pt-2 overflow-hidden transition-all duration-500 ease-in-out flex flex-col sm:flex-row w-full p-2 gap-2">
      <a href="#" class="border p-2 w-full sm:w-[150px] rounded-2xl text-center text-white bg-[#0c0a0a] hover:bg-white hover:text-black hover:font-semibold">Editar Datos</a>
      <a href="#" class="border p-2 w-full sm:w-[150px] rounded-2xl text-center text-red-500 bg-[#0c0a0a] hover:bg-white hover:text-black hover:font-semibold">Eliminar cuenta</a>
    </div>
  </details>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordions = document.querySelectorAll('[data-accordion]');
    accordions.forEach((accordion) => {
      const details = accordion.querySelectorAll('details');
      
      details.forEach((detail) => {
        detail.addEventListener('toggle', () => {
          if (detail.open) {
            details.forEach((otherDetail) => {
              if (otherDetail !== detail) {
                otherDetail.removeAttribute('open');
              }
            });
          }
        });
      });
    });
  });
</script>

